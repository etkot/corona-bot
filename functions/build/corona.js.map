{"version":3,"sources":["../src/corona.js"],"names":["axios","require","functions","botUrl","config","telegram","token","undefined","exports","sendCorona","chat_id","corona","get","CasesByPlace","RecoveredByPlace","DeathsByPlace","sickPeople","data","confirmed","recoveredPeople","recovered","deadPeople","deaths","sickCases","length","recoveredCases","deathCases","forEach","person","healthCareDistrict","text","place","hasOwnProperty","amount","post","parse_mode","e","console","error"],"mappings":"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","sourcesContent":["const axios = require(\"axios\");\n\nconst functions = require(\"firebase-functions\");\n\n// Telegram api url for the bot\nconst botUrl = `https://api.telegram.org/bot${\n  functions.config().telegram.token\n}`;\n\nif (botUrl === undefined) {\n  throw \"botUrl is undefined\";\n}\n\nexports.sendCorona = async (chat_id) => {\n  try {\n    const corona = await axios.get(\n      \"https://w3qa5ydb4l.execute-api.eu-west-1.amazonaws.com/prod/finnishCoronaData\"\n    );\n\n    let CasesByPlace = {};\n    let RecoveredByPlace = {};\n    let DeathsByPlace = {};\n\n    const sickPeople = corona.data.confirmed;\n    const recoveredPeople = corona.data.recovered;\n    const deadPeople = corona.data.deaths;\n\n    let sickCases = sickPeople.length;\n    let recoveredCases = recoveredPeople.length;\n    let deathCases = deadPeople.length;\n\n    sickPeople.forEach((person) => {\n      CasesByPlace[person.healthCareDistrict] = CasesByPlace[\n        person.healthCareDistrict\n      ]\n        ? CasesByPlace[person.healthCareDistrict] + 1\n        : 1;\n    });\n\n    recoveredPeople.forEach((person) => {\n      RecoveredByPlace[person.healthCareDistrict] = RecoveredByPlace[\n        person.healthCareDistrict\n      ]\n        ? RecoveredByPlace[person.healthCareDistrict] + 1\n        : 1;\n    });\n\n    deadPeople.forEach((person) => {\n      DeathsByPlace[person.healthCareDistrict] = DeathsByPlace[\n        person.healthCareDistrict\n      ]\n        ? DeathsByPlace[person.healthCareDistrict] + 1\n        : 1;\n    });\n\n    let text = \"<b>CORONA-CHAN STATS:</b>\\n\\n\\tSick people:\\n\";\n\n    for (let place in CasesByPlace) {\n      if (CasesByPlace.hasOwnProperty(place)) {\n        const amount = CasesByPlace[place];\n\n        if (place === \"HUS\") {\n          place = \"Helsinki ja Uusimaa\";\n        }\n\n        text += `\\t\\t<i>${place}</i> : ${amount}\\n`;\n      }\n    }\n    //text += \"\\t\\t<i>Etkot</i> : 1\\n\"\n    text += `\\tTotal: ${sickCases}\\n\\n\\tRecovered people:\\n`;\n\n    for (let place in RecoveredByPlace) {\n      if (RecoveredByPlace.hasOwnProperty(place)) {\n        const amount = RecoveredByPlace[place];\n\n        if (place === \"HUS\") {\n          place = \"Helsinki ja Uusimaa\";\n        }\n\n        text += `\\t\\t<i>${place}</i> : ${amount}\\n`;\n      }\n    }\n    text += `\\tTotal: ${recoveredCases}\\n\\n\\tDÃ¶d people:\\n`;\n\n    for (let place in DeathsByPlace) {\n      if (DeathsByPlace.hasOwnProperty(place)) {\n        const amount = DeathsByPlace[place];\n\n        if (place === \"HUS\") {\n          place = \"Helsinki ja Uusimaa\";\n        }\n\n        text += `\\t\\t<i>${place}</i> : ${amount}\\n`;\n      }\n    }\n    text += \"\\tTotal: \" + deathCases;\n\n    await axios.post(botUrl + \"/sendMessage\", {\n      chat_id,\n      text,\n      parse_mode: \"HTML\",\n    });\n  } catch (e) {\n    console.error(e);\n  }\n};\n"],"file":"corona.js"}